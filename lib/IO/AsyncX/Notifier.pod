=encoding utf8

=for comment POD_DERIVED_INDEX_GENERATED
The following documentation is automatically generated.  Please do not edit
this file, but rather the original, inline with IO::AsyncX::Notifier
at lib/IO/AsyncX/Notifier.pm
(on the system that originally ran this).
If you do edit this file, and don't want your changes to be removed, make
sure you change the first line.

=cut

=head1 NAME

IO::AsyncX::Notifier - easier IO::Async::Notifiers with Object::Pad

=head1 SYNOPSIS

 use Object::Pad;
 class Example {
  inherit IO::AsyncX::Notifier;

  # This will be populated by ->configure(example_field => ...)
  # or ->new(example_field => ...)
  field $example_field;
  # This will be updated by ->configure (or ->new) in a similar fashion
  use Ryu::Observable;
  field $observable_field { Ryu::Observable->new };

  # You can have as many other fields as you want, main limitation
  # at the moment is that they have to be scalars.

  method current_values () {
   'Example field: ' . $example_field,
   ' and observable set to ' . $observable_field->as_string
  }
 }
 my $obj = Example->new(
  example_field    => 'xyz',
  observable_field => 'starting value'
 );
 print join "\n", $obj->current_values;

=head1 DESCRIPTION

Provides some helper logic to simplify L<Object::Pad>-based
L<IO::Async::Notifier> subclasses.

=head1 INHERITED METHODS

=over 4

=item L<IO::Async::Notifier>

L<add_child|IO::Async::Notifier/add_child>, L<adopt_future|IO::Async::Notifier/adopt_future>, L<adopted_futures|IO::Async::Notifier/adopted_futures>, L<can_event|IO::Async::Notifier/can_event>, L<children|IO::Async::Notifier/children>, L<configure_unknown|IO::Async::Notifier/configure_unknown>, L<debug_printf|IO::Async::Notifier/debug_printf>, L<get_loop|IO::Async::Notifier/get_loop>, L<invoke_error|IO::Async::Notifier/invoke_error>, L<invoke_event|IO::Async::Notifier/invoke_event>, L<loop|IO::Async::Notifier/loop>, L<make_event_cb|IO::Async::Notifier/make_event_cb>, L<maybe_invoke_event|IO::Async::Notifier/maybe_invoke_event>, L<maybe_make_event_cb|IO::Async::Notifier/maybe_make_event_cb>, L<notifier_name|IO::Async::Notifier/notifier_name>, L<parent|IO::Async::Notifier/parent>, L<remove_child|IO::Async::Notifier/remove_child>, L<remove_from_parent|IO::Async::Notifier/remove_from_parent>

=item L<Object::Pad::UNIVERSAL>

L<BUILDARGS|Object::Pad::UNIVERSAL/BUILDARGS>

=back

=head1 AUTHOR

Tom Molesworth C<< <TEAM@cpan.org> >>

=head1 LICENSE

Copyright Tom Molesworth 2021-2024. Licensed under the same terms as Perl itself.

